{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/admin/AddCompany.js","actions/index.js","components/admin/DeleteCompany.js","reducers/alert.js","reducers/auth.js","reducers/reducer_company.js","reducers/index.js","store.js","App.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","async","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","className","to","onClick","href","guestLinks","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","onChange","e","target","name","value","style","width","marginTop","onSubmit","preventDefault","placeholder","required","register","password2","alerts","alert","length","map","key","SearchBar","props","filterList","event","console","log","url","fetch","then","json","setState","isLoaded","items","sendEmail","myid","method","sweetalertfunction","bind","item","swal","text","buttons","dangerMode","willDelete","_id","icon","this","marginBottom","Component","component","rest","render","AddCompany","field","meta","touched","label","input","values","addCompany","history","push","handleSubmit","Field","renderField","margin","reduxForm","validate","form","callback","DeleteCompany","deleteCompany","float","initialState","getItem","user","companies","company","combineReducers","action","filter","setItem","removeItem","formReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","useEffect","exact","path","Login","Register","Dashboard","DeleteCompaney","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5e298e44.chunk.js","sourcesContent":["import uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGOUT = 'LOGOUT';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/users/me');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/users/login', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout / Clear Profile\n\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT });\n};\n\n\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {logout} from '../../actions/auth'\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul className=\"nav nav-tabs\">\n       <li className=\"nav-item \">\n        <Link className='nav-link text-danger ' to='/deletecompany'>Delete Edit Company</Link>\n      </li>\n      <li className=\"nav-item \" >\n        <Link className='nav-link text-success' to='/addCompany'>Add New Company</Link>\n      </li>\n      <li className=\"nav-item \">\n        <Link className='nav-link ' to='/dashboard'>Search Bar</Link>\n      </li>\n           <li className=\"nav-item \">\n        <a className='nav-link text-secondary' onClick={logout} href='#!'>\n             Logout\n        </a>\n        \n      </li>\n   \n      \n    </ul>\n  );\n\n  const guestLinks = (\n    <ul className=\"nav nav-tabs\">\n    \n    \n      <li className=\"nav-item\">\n        <Link className='nav-link active' to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <div className=\"container\">\n\n          <nav className='navbar navbar-dark bg-light'>\n   <span className=\"badge badge-danger text-wrap\"> \n     <h3>\n        <i className=\"nav-link\" href=\"#!\"> Den Gode by-Post Mail</i>\n      </h3>\n     </span>  \n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n    </div>\n\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps, {logout}\n)(Navbar);\n","import React, { Fragment, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <div className= \" mx-auto\" style={{width: \"400px\", marginTop: \"8%\"}}>\n          <h1 className='large text-primary'>Sign In</h1>\n    \n      <form  onSubmit={e => onSubmit(e)}>\n       \n              <div className='form-group'>\n                        <input\n                        className=\"form-control\"\n                          type='email'\n                          placeholder='Email Address'\n                          name='email'\n                          value={email}\n                          onChange={e => onChange(e)}\n                          required\n                        />\n                      </div>\n       \n       \n                <div className='form-group'>\n                        <input\n                        className=\"form-control\"\n                          type='password'\n                          placeholder='Password'\n                          name='password'\n                          value={password}\n                          onChange={e => onChange(e)}\n                        />\n                      </div>\n        \n        <input type='submit' className='btn btn-primary ' value='Login' />\n      </form>\n      </div>\n    \n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n\n           <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Create Your Account\n      </p>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n      </div>\n   \n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, register }\n)(Register);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { Component } from \"react\";\nimport swal from 'sweetalert';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n this.sweetalertfunction = this.sweetalertfunction.bind(this)\n  }\n \n  componentDidMount() {\n    fetch(\"/api/company\")\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        }); \n       \n      });\n     \n  }\n\n  filterList = event => {\n    console.log(\"this is a filter!\");\n    let url = \"/api/company/\" + event.target.value;\n    fetch(url)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n  };\n\n  sendEmail = (event, myid) => {\n    let url = \"/api/company/\" + myid;\n    console.log(\"sending email: \" + myid);\n    fetch(url, {\n      method: \"POST\",\n      body: \"yoo\"\n    });\n  };\n\n \n sweetalertfunction(e, item){\n  swal({\n    text: `Send email til ${item.name} `,\n    buttons: true,\n    dangerMode: false,\n  })\n  .then((willDelete) => {\n    if (willDelete) {\n       this.sendEmail(e, item._id);\n      swal(`Emailen er nu sendt afsted til ${item.name}`, {\n        icon: \"success\",\n      });\n    } else {\n      swal(\"Emailen blev ikke sendt\");\n    }\n  });\n  \n }\n\n\n  render() {\n \n    \n    var { isLoaded, items } = this.state;\n    if (!isLoaded) {\n      return <div>is Loading</div>;\n    } else {\n      return (\n        <div className=\"container \" style={{width: \"600px\", marginTop: \"8%\"}}>\n          <input\n          \n\n            className= \"form-control focusedInput\" id=\"myInput\" \n            type=\"text\"\n            placeholder=\"Search name Here\"\n            onChange={this.filterList}\n            style= {{marginBottom:\"2%\"}}\n          />\n          <div >\n            {items.map(item => (\n              <div key={item._id}>\n                <ul\n                  className=\"list-group\" id=\"myList\"\n                >\n                  <li className= \"list-group-item list-group-item-secondary\" >\n                    \n                    <a href=\"#!\"\n                      onClick={e => this.sweetalertfunction(e, item)}\n                     \n                    >\n                      <h5>{item.name} </h5> \n                    </a>\n                  </li>\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default SearchBar;\n\n\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nconst PrivateRoute = ({\n    component: Component,\n    auth: { isAuthenticated, loading },\n    ...rest\n  }) => (\n    <Route\n      {...rest}\n      render={props =>\n        !isAuthenticated && !loading ? (\n          <Redirect to='/login' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n  \n\n  PrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  \n  export default connect(mapStateToProps)(PrivateRoute);\n  \n","import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addCompany } from \"../../actions/index\";\n\nclass AddCompany extends Component {\n  renderField(field) {\n    const {\n      meta: { touched, error }\n    } = field;\n    const className = ` ${touched && error ? \"text-danger\" : \"\"}`;\n\n    return (\n      <div className={className}>\n        <label>{field.label}</label>\n        <input\n        className=\"form-control\"\n          placeholder={field.placeholder}\n          name={field.name}\n          type={field.type}\n          {...field.input}\n        />\n\n        {touched ? error : \"\"}\n      </div>\n    );\n  }\n\n  onSubmit(values) {\n    this.props.addCompany(values, () => {\n      this.props.history.push(\"/\");\n    });\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div className= \" mx-auto\" style={{width: \"400px\", marginTop: \"8%\"}}>\n        <h3>Add New Company</h3>\n        <form\n          \n          onSubmit={handleSubmit(this.onSubmit.bind(this))}\n        >\n\n\n         \n            <Field\n              placeholder=\"Enter Name\"\n              name=\"name\"\n              type=\"name\"\n              component={this.renderField}\n            />\n           \n         \n          \n            <Field\n              placeholder=\"Enter Email\"\n              name=\"email\"\n              type=\"email\"\n              component={this.renderField}\n            />\n        \n               <button  type=\"submit\" className=\"btn btn-primary\">\n            Save\n          </button>\n          <Link style={{margin: \"0.5rem\"}} to=\"/dashboard\" className=\"btn btn-danger\"  >\n            Cancel\n          </Link>\n       \n        </form>\n      </div>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"Enter a name please\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Enter Email please\";\n  }\n  return errors;\n};\n\nexport default reduxForm({\n  validate,\n  form: \"addNewCompany\"\n})(connect(null, { addCompany })(AddCompany));\n","import axios from 'axios'\n\n\nexport const ADD_COMPANY='add_company'\nexport const GET_COMPANY = \"GET_COMPANY\"\n\n\nexport const addCompany = (values, callback) =>{\n    const request = axios.post('/api/company', values)\n    .then(() =>callback())\n    return {\n        type: ADD_COMPANY,\n        payload:request\n\n    }\n}\n//fetch companies\n\nexport const getCompanies = () =>async dispatch => {\n   try {\n       const res = await axios.get('/api/company')\n\n       dispatch({\n           type:GET_COMPANY,\n           payload: res.data\n       })\n   } catch (err) {\n       console.log('error');\n       \n   } \n}","import React, { Component } from \"react\";\nimport swal from 'sweetalert';\n\nclass DeleteCompany extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n this.sweetalertfunction = this.sweetalertfunction.bind(this)\n  }\n \n  componentDidMount() {\n    fetch(\"/api/company\")\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n\n        }); \n       \n      });\n     \n  }\n\n  filterList = event => {\n    console.log(\"this is a filter!\");\n    let url = \"/api/company/\" + event.target.value;\n    fetch(url)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json\n        });\n      });\n  };\n\n  deleteCompany = (event, myid) => {\n    let url = \"/api/company/\" + myid;\n    fetch(url, {\n      method: \"DELETE\",\n    \n    })\n    .then(res => res.json())\n    .then( this.props.history.push(\"/dashboard\"))\n\n   /*  .then(json => {\n        this.setState({\n          isLoaded: true,\n         items: json\n        });\n\n    }) */\n  };\n\n \n sweetalertfunction = (e, item) =>{\n  swal({\n    text: `Delete ${item.name} `,\n    buttons: true,\n    dangerMode: true,\n  })\n  .then((willDelete) => {\n    if (willDelete ) {\n       this.deleteCompany(e, item._id);\n      swal(`Company has been deleted `, {\n        icon: \"success\",\n      });\n    } else {\n      swal(\"It canceled\");\n    }\n  });\n  \n }\n\n\n  render() {\n \n    \n    var { isLoaded, items } = this.state;\n    if (!isLoaded && !items) {\n      return <div>is Loading</div>;\n    } else {\n      return (\n        <div className=\"container \" style={{width: \"600px\", marginTop: \"8%\"}}>\n          <input\n          \n\n            className= \"form-control focusedInput\" id=\"myInput\" \n            type=\"text\"\n            placeholder=\"Search name Here to delete\"\n            onChange={this.filterList}\n            style= {{marginBottom:\"8%\"}}\n          />\n          <div >\n            {items.map((item) => \n              \n              <div key={item._id}>\n                <ul\n                  className=\"list-group\" id=\"myList\"\n                >\n                  <li className= \"list-group-item list-group-item-danger\" >\n                    <div className=\"row\">\n                        <div className=\"col-sm-10\">\n                             <h5>name:{item.name}, email: {item.email}</h5> \n                        </div>\n                        <div style={{float:'right'}} >\n                    <button className=\"btn btn-danger\" onClick={e => this.sweetalertfunction(e, item)}>\n                        Delete\n                    </button>\n                        </div >\n                    </div>\n                     \n                   \n                  </li>\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default DeleteCompany;\n\n\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    \n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_COMPANY } from '../actions/index'\n\nconst initialState = {\n    companies:[],\n    company:null,\n    loading:true\n}\n\nexport default function(state = initialState, action){\n    const {type, payload } = action;\n    switch(type){\n        case GET_COMPANY:\n            return {\n                ...state,\n                companies:payload,\n                loading:false\n            }\n\n        default: \n        return state\n    }\n}","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport { reducer as formReducer } from 'redux-form'\nimport reducer_companey from './reducer_company'\n\n\nexport default combineReducers({\n  alert,\n  auth,\n  form: formReducer,\n  company: reducer_companey\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nimport Navbar from './components/layout/Navbar';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard'\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport AddCompany from './components/admin/AddCompany'\nimport DeleteCompaney from './components/admin/DeleteCompany'\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n//import './App.css';\n\n\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\n\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n        <Navbar />\n               <Route exact path=\"/\" component={Login} />\n              \n               <section className=\"container\">\n                  <Alert />\n               <Switch>\n               const App = () => (\n        \n                  <Route exact path = '/login' component = {Login} />\n                  <Route exact path = '/Add New user ' component = {Register} />\n                  < PrivateRoute exact path = '/dashboard' component = {Dashboard} />\n                  < PrivateRoute exact path = '/addCompany' component = {AddCompany} />\n                  < PrivateRoute exact path = '/deletecompany' component = {DeleteCompaney} />\n\n\n                  \n\n               </Switch>\n               \n               </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n\n\n","//import 'materialize-css/dist/css/materialize.min.css';\n//import 'materialize-css/dist/js/materialize.min.js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}